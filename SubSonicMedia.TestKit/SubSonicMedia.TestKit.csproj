<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <RootNamespace>SubSonicMedia.TestKit</RootNamespace>
    <Title>SubSonicMedia.TestKit</Title>
    <Description>A comprehensive testing toolkit for validating the SubSonicMedia API against your
      Subsonic server.</Description>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <PackageIcon>icon.svg</PackageIcon>
    <PackageTags>subsonic;music;api;testing;toolkit</PackageTags>
    <IsPackable>false</IsPackable>
  </PropertyGroup>
  <ItemGroup>
    <ProjectReference Include="..\SubSonicMedia\SubSonicMedia.csproj" />
    <PackageReference Include="GitVersion.MsBuild" PrivateAssets="all" />
    <PackageReference Include="DotNetEnv" />
    <PackageReference Include="Microsoft.Extensions.Configuration" />
    <PackageReference Include="Microsoft.Extensions.Configuration.EnvironmentVariables" />
    <PackageReference Include="Microsoft.Extensions.Configuration.Json" />
    <PackageReference Include="Microsoft.Extensions.Http" />
    <PackageReference Include="Spectre.Console" />
    <PackageReference Include="CommandLineParser" />
    <PackageReference Include="StyleCop.Analyzers">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>
  <ItemGroup>
    <AdditionalFiles Include="$(MSBuildThisFileDirectory)\..\stylecop.json" Link="stylecop.json" />
    <None Update=".env" Condition="Exists('$(MSBuildProjectDirectory)/.env')">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="$(MSBuildThisFileDirectory)/../README.md" Pack="true" PackagePath="\" />
    <None Include="$(MSBuildThisFileDirectory)/../assets/icon.png" Pack="true" PackagePath="." />
    <None Include="$(MSBuildThisFileDirectory)/../assets/icon.svg" Pack="true" PackagePath="." />
  </ItemGroup>
  <Target Name="RunTestsConditionally" Condition="Exists('$(MSBuildProjectDirectory)/.env')">
    <Message Importance="high" Text="Running SubSonicMedia TestKit..." />
    <Exec Command="dotnet run" WorkingDirectory="$(MSBuildProjectDirectory)" IgnoreExitCode="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Message Importance="high" Text="Tests completed successfully!"
      Condition="'$(ErrorCode)' == '0'" />
    <Error Text="Tests failed with exit code $(ErrorCode)" Condition="'$(ErrorCode)' != '0'" />
  </Target>
</Project>
