#!/bin/sh
. "$(dirname "$0")/_/husky.sh"

# Get the commit message from the file
COMMIT_MSG=$(cat "$1")

# Define the pattern (using a conventional commit format)
# Format: type(scope): description
# Types: feat, fix, docs, style, refactor, test, chore, etc.
PATTERN="^(feat|fix|docs|style|refactor|test|chore|build|ci|perf|revert)(\([a-z0-9-]+\))?: .{1,100}$"

# Check if the commit message matches the pattern
if ! echo "$COMMIT_MSG" | grep -qE "$PATTERN"; then
  echo "❌ Commit message does not follow the conventional commit format."
  echo "Required format: <type>(optional scope): <description>"
  echo "Types: feat, fix, docs, style, refactor, test, chore, build, ci, perf, revert"
  echo "Example: feat(api): add support for bookmarks endpoint"
  exit 1
fi

echo "✅ Commit message follows the conventional commit format."