name: Semantic Version Bump

on:
  workflow_dispatch:
    inputs:
      apply:
        description: "Apply version bump and create tag"
        required: true
        default: false
        type: boolean
      force_bump:
        description: "Force bump type (leave empty for auto-detection)"
        required: true
        type: choice
        options:
          - auto
          - patch
          - minor
          - major
        default: "auto"

jobs:
  bump-version:
    runs-on: windows-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Need full history for version detection

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Run version bump script
        id: bump
        shell: pwsh
        run: |
          $ApplyParam = $${{ inputs.apply }} ? "-Apply" : ""
          $ForceParam = "${{ inputs.force_bump }}"
          if ($ForceParam -eq "auto") { $ForceParam = "" }
          if ($ForceParam) { $ForceParam = "-ForceBump $ForceParam" }
          
          $command = "./scripts/Bump-Version.ps1 $ApplyParam $ForceParam"
          Write-Host "Running: $command"
          Invoke-Expression $command
          
          # Extract the new version for the GitHub release step
          if ("${{ inputs.apply }}" -eq "true") {
            [xml]$PropsXml = Get-Content "SubSonicMedia/Directory.Build.props"
            $NewVersion = $PropsXml.Project.PropertyGroup.VersionPrefix
            "new_version=$NewVersion" >> $env:GITHUB_OUTPUT
          }

      - name: Push changes (if applied)
        if: ${{ inputs.apply }}
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'github-actions@users.noreply.github.com'
          git push
          git push --tags
          
      - name: Create GitHub Release
        if: ${{ inputs.apply }}
        uses: softprops/action-gh-release@v1
        with:
          files: ./artifacts/*.nupkg
          name: Release v${{ steps.bump.outputs.new_version }}
          tag_name: v${{ steps.bump.outputs.new_version }}
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
