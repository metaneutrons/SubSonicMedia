name: Update Version

on:
  workflow_dispatch:
    inputs:
      create_tag:
        description: "Create and push Git tag"
        required: true
        default: false
        type: boolean
      increment_type:
        description: "Version increment type"
        required: false
        type: choice
        options:
          - auto
          - major
          - minor
          - patch
        default: "auto"

jobs:
  update-version:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Need full history for GitVersion

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.10.2
        with:
          versionSpec: '6.x'
          
      - name: Determine version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.10.2
        with:
          useConfigFile: true
          updateAssemblyInfo: true
          updateProjectFiles: true
          additionalArguments: ${{ inputs.increment_type != 'auto' && format('/overrideconfig increment={0}', inputs.increment_type) || '' }}

      - name: Display GitVersion outputs
        run: |
          echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"
          echo "MajorMinorPatch: ${{ steps.gitversion.outputs.majorMinorPatch }}"
          echo "PreReleaseLabel: ${{ steps.gitversion.outputs.preReleaseLabel }}"
          echo "PreReleaseNumber: ${{ steps.gitversion.outputs.preReleaseNumber }}"

      - name: Commit changes
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'github-actions@users.noreply.github.com'
          git add GitVersion.props
          git commit -m "chore: Update version to ${{ steps.gitversion.outputs.semVer }} [skip ci]"

      - name: Create and push tag
        if: ${{ inputs.create_tag }}
        run: |
          git tag v${{ steps.gitversion.outputs.semVer }}
          git push origin v${{ steps.gitversion.outputs.semVer }}
          echo "Created and pushed tag v${{ steps.gitversion.outputs.semVer }}"

      - name: Push changes
        run: git push